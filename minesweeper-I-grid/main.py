import Test

def num_grid(lst):
	for y in range(len(lst)):
		for x in range(len(lst[y])):
			if (lst[y][x] != '#'):
				lst[y][x] = 0
			else:
				lst[y][x] = -100

	for y in range(len(lst)):
		for x in range(len(lst[y])):
				if (lst[y][x] < 0):
					if (y > 0):
						lst[y - 1][x] += 1
						if (x > 0):
							lst[y - 1][x - 1] += 1
						if (x < len(lst[y]) - 1):
							lst[y - 1][x + 1] += 1
					if (y < len(lst) - 1):
						lst[y + 1][x] += 1
						if (x > 0):
							lst[y + 1][x - 1] += 1
						if (x < len(lst[y]) - 1):
							lst[y + 1][x + 1] += 1
					if (x > 0):
						lst[y][x - 1] += 1
					if (x < len(lst[y]) - 1):
						lst[y][x + 1] += 1

	for y in range(len(lst)):
		for x in range(len(lst[y])):
			if (lst[y][x] < 0):
				lst[y][x] = '#'
			else:
				lst[y][x] = str(lst[y][x])

	return lst

Test.assert_equals(num_grid([
['-', '-', '-', '-', '-'],
['-', '-', '-', '-', '-'],
['-', '-', '#', '-', '-'],
['-', '-', '-', '-', '-'],
['-', '-', '-', '-', '-']
]), [
['0', '0', '0', '0', '0'],
['0', '1', '1', '1', '0'],
['0', '1', '#', '1', '0'],
['0', '1', '1', '1', '0'],
['0', '0', '0', '0', '0']
])

Test.assert_equals(num_grid([
['-', '-', '-', '-', '#'],
['-', '-', '-', '-', '-'],
['-', '-', '#', '-', '-'],
['-', '-', '-', '-', '-'],
['#', '-', '-', '-', '-']
]), [
['0', '0', '0', '1', '#'],
['0', '1', '1', '2', '1'],
['0', '1', '#', '1', '0'],
['1', '2', '1', '1', '0'],
['#', '1', '0', '0', '0']
])

Test.assert_equals(num_grid([
['-', '-', '-', '#', '#'],
['-', '#', '-', '-', '-'],
['-', '-', '#', '-', '-'],
['-', '#', '#', '-', '-'],
['-', '-', '-', '-', '-']
]), [
['1', '1', '2', '#', '#'],
['1', '#', '3', '3', '2'],
['2', '4', '#', '2', '0'],
['1', '#', '#', '2', '0'],
['1', '2', '2', '1', '0']
])
